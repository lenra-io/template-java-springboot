{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://app.lenra.io/responses/view.yml",
  "title": "ViewResponse",
  "description": "The Lenra application view response",
  "oneOf": [
    {
      "$ref": "#/definitions/lenra-view"
    },
    {
      "$ref": "#/definitions/json-view"
    }
  ],
  "definitions": {
    "lenra-view": {
      "title": "LenraViewResponse",
      "description": "The Lenra application Lenra view response",
      "$ref": "#/definitions/components.lenra"
    },
    "json-view": {
      "title": "JsonViewResponse",
      "description": "The Lenra application JSON view response",
      "$ref": "#/definitions/json-view.definitions.value",
      "definitions": {}
    },
    "json-view.definitions.value": {
      "title": "JsonValue",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        },
        {
          "type": "integer"
        },
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/json-view.definitions.array"
        },
        {
          "$ref": "#/definitions/components.json"
        },
        {
          "$ref": "#/definitions/json-view.definitions.object"
        }
      ],
      "nullable": true
    },
    "json-view.definitions.array": {
      "title": "JsonArray",
      "type": "array",
      "items": {
        "$ref": "#/definitions/json-view.definitions.value"
      }
    },
    "components.json": {
      "title": "JsonComponent",
      "description": "Any component",
      "oneOf": [
        {
          "$ref": "#/definitions/components.listener"
        }
      ]
    },
    "json-view.definitions.object": {
      "title": "JsonObject",
      "type": "object",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/json-view.definitions.value"
        }
      }
    },
    "components.listener": {
      "title": "Listener",
      "type": "object",
      "properties": {
        "_type": {
          "const": "listener"
        },
        "name": {
          "description": "The name of the listener to call",
          "type": "string",
          "pattern": "^(@lenra:)?[a-zA-Z_$][a-zA-Z_.$0-9]*$"
        },
        "props": {
          "$ref": "#/definitions/defs.props"
        }
      },
      "required": [
        "_type",
        "name"
      ],
      "additionalProperties": false
    },
    "defs.props": {
      "title": "Props",
      "description": "Parameters passed to the listener",
      "type": "object"
    },
    "components.lenra": {
      "title": "LenraComponent",
      "description": "Any component",
      "oneOf": [
        {
          "$ref": "#/definitions/components.actionable"
        },
        {
          "$ref": "#/definitions/components.button"
        },
        {
          "$ref": "#/definitions/components.carousel"
        },
        {
          "$ref": "#/definitions/components.checkbox"
        },
        {
          "$ref": "#/definitions/components.container"
        },
        {
          "$ref": "#/definitions/components.dropdownButton"
        },
        {
          "$ref": "#/definitions/components.flex"
        },
        {
          "$ref": "#/definitions/components.flexible"
        },
        {
          "$ref": "#/definitions/components.form"
        },
        {
          "$ref": "#/definitions/components.icon"
        },
        {
          "$ref": "#/definitions/components.image"
        },
        {
          "$ref": "#/definitions/components.menu"
        },
        {
          "$ref": "#/definitions/components.menuItem"
        },
        {
          "$ref": "#/definitions/components.overlayEntry"
        },
        {
          "$ref": "#/definitions/components.radio"
        },
        {
          "$ref": "#/definitions/components.slider"
        },
        {
          "$ref": "#/definitions/components.stack"
        },
        {
          "$ref": "#/definitions/components.statusSticker"
        },
        {
          "$ref": "#/definitions/components.text"
        },
        {
          "$ref": "#/definitions/components.textField"
        },
        {
          "$ref": "#/definitions/components.toggle"
        },
        {
          "$ref": "#/definitions/components.view"
        },
        {
          "$ref": "#/definitions/components.wrap"
        }
      ]
    },
    "components.actionable": {
      "title": "Actionable",
      "description": "Element of type Actionable",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "actionable"
        },
        "child": {
          "$ref": "#/definitions/components.lenra"
        },
        "onPressed": {
          "description": "The listener to be called when the actionable is pressed.",
          "$ref": "#/definitions/components.listener"
        },
        "onDoublePressed": {
          "description": "The listener to be called when the actionable is double pressed.",
          "$ref": "#/definitions/components.listener"
        },
        "onLongPressed": {
          "description": "The listener to be called when the actionable is long pressed.",
          "$ref": "#/definitions/components.listener"
        },
        "onPressedCancel": {
          "description": "The listener to be called when the actionable is pressed inside and released outside of the actionable, causing it to cancel the press action.",
          "$ref": "#/definitions/components.listener"
        },
        "onHovered": {
          "description": "The listener to be called when the actionable is hovered and when the mouse exits the hoverable area.",
          "$ref": "#/definitions/components.listener"
        },
        "submit": {
          "description": "Whether the actionable can submit a form.",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "_type",
        "child"
      ],
      "additionalProperties": false
    },
    "components.button": {
      "title": "Button",
      "description": "Element of type Button",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "button"
        },
        "text": {
          "description": "The value of the text inside the button",
          "type": "string"
        },
        "disabled": {
          "description": "The button is disabled if true",
          "type": "boolean",
          "default": false
        },
        "size": {
          "$ref": "#/definitions/components.styles.size"
        },
        "mainStyle": {
          "$ref": "#/definitions/components.styles.style"
        },
        "onPressed": {
          "$ref": "#/definitions/components.listener"
        },
        "leftIcon": {
          "$ref": "#/definitions/components.icon"
        },
        "rightIcon": {
          "$ref": "#/definitions/components.icon"
        },
        "submit": {
          "description": "Whether the button is a submit button for a form.",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "_type",
        "text"
      ],
      "additionalProperties": false
    },
    "components.carousel": {
      "title": "Carousel",
      "description": "Element of type Carousel",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "carousel"
        },
        "children": {
          "description": "The children",
          "type": "array",
          "items": {
            "$ref": "#/definitions/components.lenra"
          }
        },
        "options": {
          "$ref": "#/definitions/components.styles.carouselOptions"
        }
      },
      "required": [
        "_type",
        "children"
      ],
      "additionalProperties": false
    },
    "components.checkbox": {
      "title": "Checkbox",
      "description": "Element of type Checkbox",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "checkbox"
        },
        "value": {
          "description": "The default state of the checkbox",
          "type": "boolean"
        },
        "tristate": {
          "description": "Whether the checkbox can have 3 states.",
          "type": "boolean"
        },
        "onPressed": {
          "$ref": "#/definitions/components.listener"
        },
        "style": {
          "$ref": "#/definitions/components.styles.checkboxStyle"
        },
        "materialTapTargetSize": {
          "$ref": "#/definitions/components.styles.materialTapTargetSize"
        },
        "autofocus": {
          "description": "Whether the checkbox is focused initially.",
          "type": "boolean"
        },
        "name": {
          "description": "The name that will be used in the form.",
          "type": "string"
        }
      },
      "required": [
        "_type",
        "value"
      ],
      "additionalProperties": false
    },
    "components.container": {
      "title": "Container",
      "description": "Element of type container",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "container"
        },
        "child": {
          "$ref": "#/definitions/components.lenra"
        },
        "alignment": {
          "$ref": "#/definitions/components.styles.alignment"
        },
        "border": {
          "$ref": "#/definitions/components.styles.border"
        },
        "padding": {
          "$ref": "#/definitions/components.styles.padding"
        },
        "constraints": {
          "$ref": "#/definitions/components.styles.boxConstraints"
        },
        "decoration": {
          "$ref": "#/definitions/components.styles.boxDecoration"
        }
      },
      "required": [
        "_type"
      ],
      "additionalProperties": false
    },
    "components.dropdownButton": {
      "title": "DropdownButton",
      "description": "Element of type Dropdown Button",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "dropdownButton"
        },
        "text": {
          "description": "The text of the dropdown button",
          "type": "string"
        },
        "disabled": {
          "description": "If true, the dropdown button is disabled",
          "type": "boolean",
          "default": false
        },
        "size": {
          "$ref": "#/definitions/components.styles.size"
        },
        "mainStyle": {
          "$ref": "#/definitions/components.styles.style"
        },
        "child": {
          "$ref": "#/definitions/components.lenra"
        },
        "icon": {
          "$ref": "#/definitions/components.icon"
        }
      },
      "required": [
        "_type",
        "text",
        "child"
      ],
      "additionalProperties": false
    },
    "components.flex": {
      "title": "Flex",
      "description": "Element of type Flex",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "flex"
        },
        "children": {
          "description": "The children",
          "type": "array",
          "items": {
            "$ref": "#/definitions/components.lenra"
          }
        },
        "direction": {
          "$ref": "#/definitions/components.styles.direction"
        },
        "mainAxisAlignment": {
          "description": "The alignment along the main axis",
          "type": "string",
          "enum": [
            "start",
            "end",
            "center",
            "spaceBetween",
            "spaceAround",
            "spaceEvenly"
          ],
          "default": "start"
        },
        "crossAxisAlignment": {
          "description": "The alignment along the cross axis",
          "type": "string",
          "enum": [
            "start",
            "end",
            "center",
            "stretch",
            "baseline"
          ],
          "default": "start"
        },
        "spacing": {
          "description": "The multiplier of the base size for the minimal spacing",
          "type": "number",
          "default": 0
        },
        "fillParent": {
          "description": "if true the flex will fill the main axis. Otherwise it will take the children size.",
          "type": "boolean",
          "default": false
        },
        "scroll": {
          "description": "If true the flex will scroll if there is too many item in the Main Axis.",
          "type": "boolean",
          "default": false
        },
        "padding": {
          "$ref": "#/definitions/components.styles.padding"
        },
        "horizontalDirection": {
          "$ref": "#/definitions/components.styles.textDirection"
        },
        "verticalDirection": {
          "$ref": "#/definitions/components.styles.verticalDirection"
        },
        "textBaseline": {
          "$ref": "#/definitions/components.styles.textBaseline"
        }
      },
      "required": [
        "_type",
        "children"
      ],
      "additionalProperties": false
    },
    "components.flexible": {
      "title": "Flexible",
      "description": "Element of type Flexible",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "flexible"
        },
        "flex": {
          "description": "How a flexible child is inscribed into the available space.",
          "type": "integer",
          "default": 1
        },
        "fit": {
          "$ref": "#/definitions/components.styles.flexFit"
        },
        "child": {
          "$ref": "#/definitions/components.lenra"
        }
      },
      "required": [
        "_type",
        "child"
      ],
      "additionalProperties": false
    },
    "components.form": {
      "title": "Form",
      "description": "Element of type Form",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "form"
        },
        "child": {
          "$ref": "#/definitions/components.lenra"
        },
        "onSubmit": {
          "description": "Callback when the user submits the form.",
          "$ref": "#/definitions/components.listener"
        }
      },
      "required": [
        "_type",
        "child"
      ],
      "additionalProperties": false
    },
    "components.icon": {
      "title": "Icon",
      "description": "The Icon to use",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "icon"
        },
        "size": {
          "description": "The size of the Icon",
          "type": "number",
          "default": 24
        },
        "color": {
          "description": "The color of the Icon. If not set or null, the color is inherited from the theme.",
          "$ref": "#/definitions/components.styles.color",
          "default": null
        },
        "semanticLabel": {
          "description": "The semantic label for the Icon. This will be announced when using accessibility mode.",
          "type": "string",
          "default": null
        },
        "value": {
          "description": "The value of the Icon",
          "$ref": "#/definitions/components.styles.iconName"
        },
        "style": {
          "$ref": "#/definitions/components.icon.definitions.iconStyle"
        }
      },
      "additionalProperties": false,
      "required": [
        "_type",
        "value"
      ],
      "definitions": {}
    },
    "components.image": {
      "title": "Image",
      "description": "Element of type Image",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "image"
        },
        "src": {
          "description": "The URL to the image. Will fetch the application's image if the URL does not start with `http(s)://`.",
          "type": "string"
        },
        "width": {
          "description": "The image width.",
          "type": "number"
        },
        "height": {
          "description": "The image height.",
          "type": "number"
        },
        "alignment": {
          "description": "How to align the image.",
          "$ref": "#/definitions/components.styles.alignment"
        },
        "centerSlice": {
          "description": "The center slice for a nine-patch image.",
          "$ref": "#/definitions/components.styles.rect"
        },
        "errorPlaceholder": {
          "description": "The error placeholder when the image encounters an error during loading.",
          "$ref": "#/definitions/components.lenra"
        },
        "excludeFromSemantics": {
          "description": "Whether to exclude this image from semantics.",
          "type": "boolean",
          "default": false
        },
        "filterQuality": {
          "description": "The quality of the image.",
          "$ref": "#/definitions/components.styles.filterQuality"
        },
        "fit": {
          "description": "How the image should fit the parent box.",
          "$ref": "#/definitions/components.styles.boxFit"
        },
        "framePlaceholder": {
          "description": "A placeholder to display while the image is loading or to add effects to the image.",
          "$ref": "#/definitions/components.lenra"
        },
        "gaplessPlayback": {
          "description": "Whether the old image (true) or nothing (false) is shown when the image provider changes.",
          "type": "boolean",
          "default": false
        },
        "isAntiAlias": {
          "description": "Whether to paint the image with anti-aliasing.",
          "type": "boolean",
          "default": false
        },
        "loadingPlaceholder": {
          "description": "A placeholder to display while the image is still loading.",
          "$ref": "#/definitions/components.lenra"
        },
        "repeat": {
          "description": "How the image should be repeated accross the bounds not covered by the image.",
          "$ref": "#/definitions/components.styles.imageRepeat"
        },
        "semanticLabel": {
          "description": "A semantic description of the image. This is used for TalkBack on Android and VoiceOver on IOS.",
          "type": "string"
        }
      },
      "required": [
        "_type",
        "src"
      ],
      "additionalProperties": false
    },
    "components.menu": {
      "title": "Menu",
      "description": "Element of type Menu",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "menu"
        },
        "children": {
          "type": "array",
          "description": "The menu items",
          "items": {
            "$ref": "#/definitions/components.lenra"
          }
        }
      },
      "required": [
        "_type",
        "children"
      ],
      "additionalProperties": false
    },
    "components.menuItem": {
      "title": "MenuItem",
      "description": "Element of type MenuItem",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "menuItem"
        },
        "text": {
          "description": "The text of the element",
          "type": "string"
        },
        "isSelected": {
          "description": "Whether the element is selected or not.",
          "type": "boolean",
          "default": false
        },
        "disabled": {
          "description": "Whether the element should be disabled or not.",
          "type": "boolean",
          "default": false
        },
        "icon": {
          "$ref": "#/definitions/components.icon"
        },
        "onPressed": {
          "$ref": "#/definitions/components.listener"
        }
      },
      "required": [
        "_type",
        "text"
      ],
      "additionalProperties": false
    },
    "components.overlayEntry": {
      "title": "OverlayEntry",
      "description": "Element of type OverlayEntry",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "overlayEntry"
        },
        "child": {
          "$ref": "#/definitions/components.lenra"
        },
        "maintainState": {
          "description": "Whether this entry must be included in the tree even if there is a fully opaque entry above it.",
          "type": "boolean",
          "default": false
        },
        "opaque": {
          "description": "Whether this entry occludes the entire overlay.",
          "type": "boolean",
          "default": false
        },
        "showOverlay": {
          "description": "Whether this entry should be shown.",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "_type",
        "child"
      ],
      "additionalProperties": false
    },
    "components.radio": {
      "title": "Radio",
      "description": "Element of type Radio",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "radio"
        },
        "autofocus": {
          "description": "Whether the radio will be selected initially.",
          "type": "boolean"
        },
        "value": {
          "description": "The value of the radio",
          "type": "string"
        },
        "groupValue": {
          "description": "The value group of the radio",
          "type": "string"
        },
        "materialTapTargetSize": {
          "description": "Configures the minimum size of the tap target.",
          "$ref": "#/definitions/components.styles.materialTapTargetSize"
        },
        "onPressed": {
          "$ref": "#/definitions/components.listener"
        },
        "toggleable": {
          "description": "Whether the radio is allowed to go from checked to unchecked when clicking on it.",
          "type": "boolean"
        },
        "style": {
          "$ref": "#/definitions/components.styles.radioStyle"
        },
        "name": {
          "description": "The name that will be used in the form.",
          "type": "string"
        }
      },
      "required": [
        "_type",
        "value",
        "groupValue"
      ],
      "additionalProperties": false
    },
    "components.slider": {
      "title": "Slider",
      "description": "Element of type Slider",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "slider"
        },
        "style": {
          "$ref": "#/definitions/components.styles.sliderStyle"
        },
        "autofocus": {
          "description": "Whether the slider should be focused initially.",
          "type": "boolean",
          "default": false
        },
        "divisions": {
          "description": "The number of divisions to show on the slider.",
          "type": "number"
        },
        "label": {
          "description": "The label of the slider.",
          "type": "string"
        },
        "min": {
          "description": "The minimum value of the slider.",
          "type": "number",
          "default": 0
        },
        "max": {
          "description": "The maximum value of the slider.",
          "type": "number",
          "default": 1
        },
        "onChanged": {
          "description": "The callback to be invoked when the slider value changes.",
          "$ref": "#/definitions/components.listener"
        },
        "onChangeEnd": {
          "description": "The callback to be invoked when the slider is released.",
          "$ref": "#/definitions/components.listener"
        },
        "onChangeStart": {
          "description": "The callback to be invoked when the slider is pressed.",
          "$ref": "#/definitions/components.listener"
        },
        "value": {
          "description": "The current value of the slider.",
          "type": "number",
          "default": 0
        },
        "name": {
          "description": "The name that will be used in the form.",
          "type": "string"
        }
      },
      "required": [
        "_type"
      ],
      "additionalProperties": false
    },
    "components.stack": {
      "title": "Stack",
      "description": "Element of type Stack",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "stack"
        },
        "children": {
          "description": "The children of the Stack.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/components.lenra"
          }
        },
        "alignment": {
          "$ref": "#/definitions/components.styles.alignment"
        },
        "fit": {
          "$ref": "#/definitions/components.styles.stackFit"
        }
      },
      "required": [
        "_type",
        "children"
      ],
      "additionalProperties": false
    },
    "components.statusSticker": {
      "title": "StatusSticker",
      "description": "Element of type StatusSticker",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "statusSticker"
        },
        "status": {
          "description": "the status of the element",
          "type": "string",
          "enum": [
            "success",
            "warning",
            "error",
            "pending"
          ]
        }
      },
      "required": [
        "_type",
        "status"
      ],
      "additionalProperties": false
    },
    "components.text": {
      "title": "Text",
      "description": "Element of type Text",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "text"
        },
        "value": {
          "description": "the value displayed in the element",
          "type": "string"
        },
        "style": {
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "locale": {
          "$ref": "#/definitions/components.styles.locale"
        },
        "semanticsLabel": {
          "description": "The value to explain a different semantics",
          "type": "string"
        },
        "spellOut": {
          "description": "Whether the assistive technologies should spell out this text character by character",
          "type": "boolean"
        },
        "textAlign": {
          "description": "The text alignment",
          "enum": [
            "left",
            "center",
            "right",
            "justify",
            "start",
            "end"
          ],
          "default": "left"
        },
        "children": {
          "description": "Additional texts to add after this text.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/components.text"
          }
        }
      },
      "required": [
        "_type",
        "value"
      ],
      "additionalProperties": false
    },
    "components.textField": {
      "title": "TextField",
      "description": "Element of type TextField",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "textfield"
        },
        "value": {
          "description": "The value displayed inside the Textfield",
          "type": "string"
        },
        "autocorrect": {
          "description": "Whether to enable the autocorrection",
          "type": "boolean"
        },
        "autofillHints": {
          "description": "The type of this text input to provide autofill hints.",
          "$ref": "#/definitions/components.styles.autofillHints"
        },
        "autofocus": {
          "description": "Whether this Textfield should be focused initially.",
          "type": "boolean"
        },
        "buildCounter": {
          "description": "Callback that generates a custom counter view.",
          "$ref": "#/definitions/components.listener"
        },
        "style": {
          "description": "The style of the Textfield.",
          "$ref": "#/definitions/components.styles.textFieldStyle"
        },
        "dragStartBehavior": {
          "description": "Determines the way that drag start behavior is handled.",
          "$ref": "#/definitions/components.styles.dragStartBehavior"
        },
        "enabled": {
          "description": "Whether the text field is enabled.",
          "type": "boolean"
        },
        "enableInteractiveSelection": {
          "description": "Whether to enable user interface options to change the text selection.",
          "type": "boolean"
        },
        "expands": {
          "description": "Whether the TextField is sized to fill its parent.",
          "type": "boolean"
        },
        "keyboardType": {
          "description": "The type of the keyboard to use for editing the text.",
          "$ref": "#/definitions/components.styles.textInputType"
        },
        "maxLength": {
          "description": "The maximum number of characters to allow in the text field.",
          "type": "integer"
        },
        "maxLengthEnforcement": {
          "description": "Determines how the maxLength limit should be enforced.",
          "$ref": "#/definitions/components.styles.maxLengthEnforcement"
        },
        "maxLines": {
          "description": "The maximum number of lines to show at one time.",
          "type": "integer"
        },
        "minLines": {
          "description": "The minimum number of lines to occupy on the screen.",
          "type": "integer"
        },
        "obscureText": {
          "description": "Whether to hide the text being edited.",
          "type": "boolean"
        },
        "onAppPrivateCommand": {
          "description": "This is used to receive a private command from the input method.",
          "$ref": "#/definitions/components.listener"
        },
        "onChanged": {
          "description": "Callback when the user changes the text field value.",
          "$ref": "#/definitions/components.listener"
        },
        "onEditingComplete": {
          "description": "Callback when the user finishes editing the text field.",
          "$ref": "#/definitions/components.listener"
        },
        "onSubmitted": {
          "description": "Callback when the user tells he is done editing the text field.",
          "$ref": "#/definitions/components.listener"
        },
        "onTap": {
          "description": "Callback when the user taps on the text field.",
          "$ref": "#/definitions/components.listener"
        },
        "readOnly": {
          "description": "Whether the text can be changed.",
          "type": "boolean"
        },
        "showCursor": {
          "description": "Whether to show the cursor.",
          "type": "boolean"
        },
        "textCapitalization": {
          "description": "Configures how the platform keyboard will select an uppercase or lowercase keyboard.",
          "$ref": "#/definitions/components.styles.textCapitalization"
        },
        "textDirection": {
          "description": "The direction of the text.",
          "$ref": "#/definitions/components.styles.textDirection"
        },
        "textInputAction": {
          "description": "The type of the action button to use for the keyboard.",
          "$ref": "#/definitions/components.styles.textInputAction"
        },
        "toolbarOptions": {
          "description": "Configuration of toolbar options",
          "$ref": "#/definitions/components.styles.toolbarOptions"
        },
        "name": {
          "description": "The name that will be used in the form.",
          "type": "string"
        }
      },
      "required": [
        "_type",
        "value"
      ],
      "additionalProperties": false
    },
    "components.toggle": {
      "title": "Toggle",
      "description": "Element of type Toggle",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "toggle"
        },
        "value": {
          "description": "The value of the element.",
          "type": "boolean"
        },
        "splashRadius": {
          "description": "The splash radius when you click on the toggle.",
          "type": "number"
        },
        "autofocus": {
          "description": "The default focus in boolean.",
          "type": "boolean"
        },
        "dragStartBehavior": {
          "description": "Determines the way that drag start behavior is handled.",
          "type": "string",
          "enum": [
            "start",
            "down"
          ]
        },
        "onPressed": {
          "$ref": "#/definitions/components.listener"
        },
        "style": {
          "$ref": "#/definitions/components.styles.toggleStyle"
        },
        "name": {
          "description": "The name that will be used in the form.",
          "type": "string"
        },
        "disabled": {
          "description": "The toggle is disabled if true",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "_type",
        "value"
      ],
      "additionalProperties": false
    },
    "components.view": {
      "title": "View",
      "description": "Element of type view",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "view"
        },
        "name": {
          "description": "The name of the view",
          "type": "string"
        },
        "props": {
          "$ref": "#/definitions/defs.props"
        },
        "find": {
          "$ref": "#/definitions/components.view.definitions.find"
        },
        "context": {
          "description": "The context projection. This field represents the projection of the context, allowing selective retrieval of specific elements. It is a map that specifies the desired elements to be included in the projection.",
          "type": "object"
        }
      },
      "required": [
        "_type",
        "name"
      ],
      "additionalProperties": false,
      "definitions": {}
    },
    "components.wrap": {
      "title": "Wrap",
      "description": "Element of type Wrap",
      "type": "object",
      "properties": {
        "_type": {
          "description": "The identifier of the component",
          "const": "wrap"
        },
        "children": {
          "description": "The children of the wrap.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/components.lenra"
          }
        },
        "direction": {
          "$ref": "#/definitions/components.styles.direction"
        },
        "crossAxisAlignment": {
          "$ref": "#/definitions/components.styles.wrapCrossAlignment"
        },
        "spacing": {
          "description": "The spacing between each child of the wrap.",
          "type": "number",
          "default": 0
        },
        "runSpacing": {
          "description": "The spacing between each run of the wrap.",
          "type": "number",
          "default": 0
        },
        "alignment": {
          "$ref": "#/definitions/components.styles.wrapAlignment"
        },
        "runAlignment": {
          "$ref": "#/definitions/components.styles.wrapAlignment"
        },
        "horizontalDirection": {
          "$ref": "#/definitions/components.styles.textDirection"
        },
        "verticalDirection": {
          "$ref": "#/definitions/components.styles.verticalDirection"
        }
      },
      "required": [
        "_type",
        "children"
      ],
      "additionalProperties": false
    },
    "components.styles.direction": {
      "title": "Direction",
      "description": "The direction of the component (horizontal/vertical)",
      "type": "string",
      "enum": [
        "horizontal",
        "vertical"
      ],
      "default": "horizontal"
    },
    "components.styles.wrapCrossAlignment": {
      "title": "Wrap CrossAlignment",
      "description": "How the objects in the Wrap should be aligned on the CrossAxis.",
      "type": "string",
      "enum": [
        "start",
        "end",
        "center"
      ],
      "default": "start"
    },
    "components.styles.wrapAlignment": {
      "title": "Wrap Alignment",
      "description": "How the objects in the Wrap should be aligned.",
      "type": "string",
      "enum": [
        "start",
        "end",
        "center",
        "spaceBetween",
        "spaceAround",
        "spaceEvenly"
      ],
      "default": "start"
    },
    "components.styles.textDirection": {
      "title": "Text Direction",
      "description": "In which direction the elements should be placed following the horizontal axis.",
      "type": "string",
      "enum": [
        "ltr",
        "rtl"
      ],
      "default": "ltr"
    },
    "components.styles.verticalDirection": {
      "title": "Vertical Direction",
      "description": "How the objects should be aligned following the vertical axis.",
      "type": "string",
      "enum": [
        "down",
        "up"
      ],
      "default": "down"
    },
    "components.view.definitions.find": {
      "title": "Find",
      "description": "Find query for view components",
      "type": "object",
      "properties": {
        "coll": {
          "description": "the collection where the query is applied",
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/data.query"
        },
        "projection": {
          "$ref": "#/definitions/data.projection"
        }
      },
      "required": [
        "coll",
        "query"
      ],
      "additionalProperties": false
    },
    "data.query": {
      "title": "Query",
      "description": "Mongo data query",
      "type": "object",
      "additionalProperties": true
    },
    "data.projection": {
      "title": "Projection",
      "description": "Mongo data query projection",
      "type": "object",
      "additionalProperties": {}
    },
    "components.styles.toggleStyle": {
      "title": "ToggleStyle",
      "description": "Element of type ToggleStyle",
      "type": "object",
      "properties": {
        "activeColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "activeTrackColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "inactiveTrackColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "inactiveThumbColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "hoverColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "focusColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "activeThumbImage": {
          "$ref": "#/definitions/components.image"
        },
        "inactiveThumbImage": {
          "$ref": "#/definitions/components.image"
        },
        "materialTapTargetSize": {
          "type": "string",
          "enum": [
            "padded",
            "shrinkWrap"
          ]
        }
      },
      "additionalProperties": false
    },
    "components.styles.color": {
      "title": "Color",
      "description": "Color type",
      "type": "integer"
    },
    "components.styles.autofillHints": {
      "title": "AutofillHints",
      "description": "The AutofillHints enum to handle textfield's autocompletion.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "addressCity",
          "addressCityAndState",
          "addressState",
          "birthday",
          "birthdayDay",
          "birthdayMonth",
          "birthdayYear",
          "countryCode",
          "countryName",
          "creditCardExpirationDate",
          "creditCardExpirationDay",
          "creditCardExpirationMonth",
          "creditCardExpirationYear",
          "creditCardFamilyName",
          "creditCardGivenName",
          "creditCardMiddleName",
          "creditCardName",
          "creditCardNumber",
          "creditCardSecurityCode",
          "creditCardType",
          "email",
          "familyName",
          "fullStreetAddress",
          "gender",
          "givenName",
          "impp",
          "jobTitle",
          "language",
          "location",
          "middleInitial",
          "middleName",
          "name",
          "namePrefix",
          "nameSuffix",
          "newPassword",
          "newUsername",
          "nickname",
          "oneTimeCode",
          "organizationName",
          "password",
          "photo",
          "postalAddress",
          "postalAddressExtended",
          "postalAddressExtendedPostalCode",
          "postalCode",
          "streetAddressLevel1",
          "streetAddressLevel2",
          "streetAddressLevel3",
          "streetAddressLevel4",
          "streetAddressLine1",
          "streetAddressLine2",
          "streetAddressLine3",
          "sublocality",
          "telephoneNumber",
          "telephoneNumberAreaCode",
          "telephoneNumberCountryCode",
          "telephoneNumberDevice",
          "telephoneNumberExtension",
          "telephoneNumberLocal",
          "telephoneNumberLocalPrefix",
          "telephoneNumberLocalSuffix",
          "telephoneNumberNational",
          "transactionAmount",
          "transactionCurrency",
          "url",
          "username"
        ]
      }
    },
    "components.styles.textFieldStyle": {
      "title": "TextFieldStyle",
      "description": "Element of type TextFieldStyle",
      "type": "object",
      "properties": {
        "cursorColor": {
          "description": "The color of the cursor.",
          "$ref": "#/definitions/components.styles.color"
        },
        "cursorHeight": {
          "description": "The height of the cursor.",
          "type": "number"
        },
        "cursorRadius": {
          "description": "The radius of the cursor.",
          "$ref": "#/definitions/components.styles.radius"
        },
        "cursorWidth": {
          "description": "The width of the cursor.",
          "type": "number"
        },
        "decoration": {
          "description": "The decoration of the input.",
          "$ref": "#/definitions/components.styles.inputDecoration"
        },
        "keyboardAppearance": {
          "description": "The appearance of the keyboard.",
          "$ref": "#/definitions/components.styles.brightness"
        },
        "obscuringCharacter": {
          "description": "The character used to obscure the text.",
          "type": "string"
        },
        "scrollPadding": {
          "description": "The padding of the scrollable when the Textfield scrolls into view.",
          "$ref": "#/definitions/components.styles.padding"
        },
        "selectionHeightStyle": {
          "description": "The height of the selection highlight boxes.",
          "$ref": "#/definitions/components.styles.boxHeightStyle"
        },
        "selectionWidthStyle": {
          "description": "The width of the selection highlight boxes.",
          "$ref": "#/definitions/components.styles.boxWidthStyle"
        },
        "strutStyle": {
          "$ref": "#/definitions/components.styles.strutStyle"
        },
        "textStyle": {
          "description": "The style of the text.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "textAlign": {
          "description": "The alignment of the text.",
          "$ref": "#/definitions/components.styles.textAlign"
        },
        "textAlignVertical": {
          "description": "How the text should be aligned vertically.",
          "$ref": "#/definitions/components.styles.textAlignVertical"
        }
      },
      "additionalProperties": false
    },
    "components.styles.dragStartBehavior": {
      "title": "DragStartBehavior",
      "description": "Component of type DragStartBehavior.",
      "type": "string",
      "enum": [
        "start",
        "down"
      ]
    },
    "components.styles.textInputType": {
      "title": "TextInputType",
      "description": "Element of textInput Type",
      "type": "object",
      "properties": {
        "copy": {
          "description": "Whether to show copy option in toolbar",
          "type": "boolean"
        },
        "cut": {
          "description": "Whether to show cut option in toolbar",
          "type": "boolean"
        },
        "paste": {
          "description": "Whether to show past option in toolbar",
          "type": "boolean"
        },
        "selectAll": {
          "description": "Whether to show select all option in toolbar",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "components.styles.maxLengthEnforcement": {
      "title": "MaxLengthEnforcement",
      "description": "Component of type MaxLengthEnforcement.",
      "type": "string",
      "enum": [
        "none",
        "enforced",
        "truncateAfterCompositionEnds"
      ]
    },
    "components.styles.textCapitalization": {
      "title": "TextCapitalization",
      "description": "Component of type TextCapitalization.",
      "type": "string",
      "enum": [
        "none",
        "words",
        "sentences",
        "characters"
      ]
    },
    "components.styles.textInputAction": {
      "title": "TextInputAction",
      "description": "Component of type TextInputAction.",
      "type": "string",
      "enum": [
        "continueAction",
        "done",
        "emergencyCall",
        "go",
        "join",
        "newline",
        "next",
        "none",
        "previous",
        "route",
        "search",
        "send",
        "unspecified"
      ]
    },
    "components.styles.toolbarOptions": {
      "title": "ToolbarOptions",
      "description": "Element of type toolbar options",
      "type": "object",
      "properties": {
        "decimal": {
          "description": "The number is decimal, allowing a decimal point to provide fractional",
          "type": "boolean"
        },
        "signed": {
          "description": "The number is signed, allowing a positive or negative sign at the start.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "components.styles.radius": {
      "title": "Radius",
      "description": "Element of type Radius",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "default": 0
        },
        "y": {
          "type": "number",
          "default": 0
        }
      },
      "additionalProperties": false
    },
    "components.styles.inputDecoration": {
      "title": "InputDecoration",
      "description": "Element of type InputDecoration",
      "type": "object",
      "properties": {
        "alignLabelWithHint": {
          "description": "Whether to align the label with the hint or not. Defaults to false.",
          "type": "boolean",
          "default": false
        },
        "border": {
          "description": "The border to display around the input. Will render a border by default when border is null.",
          "$ref": "#/definitions/components.styles.inputBorder"
        },
        "constraints": {
          "description": "The constraints to be applied to the input.",
          "$ref": "#/definitions/components.styles.boxConstraints"
        },
        "contentPadding": {
          "description": "The padding to be applied to the input.",
          "$ref": "#/definitions/components.styles.padding"
        },
        "counter": {
          "type": "object"
        },
        "counterStyle": {
          "description": "The style use for the counterText.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "counterText": {
          "description": "The text to place below the line as a character counter.",
          "type": "string"
        },
        "disabledBorder": {
          "description": "The border to display when the input is disabled and not showing an error.",
          "$ref": "#/definitions/components.styles.inputBorder"
        },
        "enabled": {
          "description": "Whether the input is enabled or disabled.",
          "type": "boolean"
        },
        "enabledBorder": {
          "description": "The border to display when the input is enabled and not showing an error.",
          "$ref": "#/definitions/components.styles.inputBorder"
        },
        "errorBorder": {
          "description": "The border to display when the input has an error and does not have the focus.",
          "$ref": "#/definitions/components.styles.inputBorder"
        },
        "errorMaxLines": {
          "description": "The maximum number of lines the error text can use.",
          "type": "integer"
        },
        "errorStyle": {
          "description": "The style to use for the error text.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "errorText": {
          "description": "The error text to display when the input has an error.",
          "type": "string"
        },
        "fillColor": {
          "description": "The fill color of the input.",
          "$ref": "#/definitions/components.styles.color"
        },
        "filled": {
          "description": "Whether the input is filled with fillColor.",
          "type": "boolean"
        },
        "floatingLabelBehavior": {
          "description": "Defines how the floating label should be displayed.",
          "$ref": "#/definitions/components.styles.floatingLabelBehavior"
        },
        "floatingLabelStyle": {
          "description": "The style to use for the floating label.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "focusColor": {
          "description": "The color to use when the input is focused.",
          "$ref": "#/definitions/components.styles.color"
        },
        "focusedBorder": {
          "description": "The border to display when the input has the focus.",
          "$ref": "#/definitions/components.styles.inputBorder"
        },
        "focusedErrorBorder": {
          "description": "The border to display when the input has the focus and has an error.",
          "$ref": "#/definitions/components.styles.inputBorder"
        },
        "helperMaxLines": {
          "description": "The maximum number of lines the helper text can use.",
          "type": "integer"
        },
        "helperStyle": {
          "description": "The style to use for the helper text.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "helperText": {
          "description": "The helper text to display.",
          "type": "string"
        },
        "hintMaxLines": {
          "description": "The maximum number of lines the hint text can use.",
          "type": "integer"
        },
        "hintStyle": {
          "description": "The style to use for the hint text.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "hintText": {
          "description": "The hint text to display.",
          "type": "string"
        },
        "hintTextDirection": {
          "description": "The direction of the hint text.",
          "$ref": "#/definitions/components.styles.textDirection"
        },
        "hoverColor": {
          "description": "The color to use when the input is hovered.",
          "$ref": "#/definitions/components.styles.color"
        },
        "icon": {
          "$ref": "#/definitions/components.icon"
        },
        "iconColor": {
          "description": "The color for the icon",
          "$ref": "#/definitions/components.styles.color"
        },
        "isCollapsed": {
          "description": "Whether the decoration is the same size as the input field.",
          "type": "boolean"
        },
        "isDense": {
          "description": "Whether the decoration is dense.",
          "type": "boolean"
        },
        "label": {
          "$ref": "#/definitions/components.lenra"
        },
        "labelStyle": {
          "description": "The style to use for the label.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "labelText": {
          "description": "The text that describes the input field.",
          "type": "string"
        },
        "prefix": {
          "$ref": "#/definitions/components.lenra"
        },
        "prefixIcon": {
          "$ref": "#/definitions/components.icon"
        },
        "prefixIconColor": {
          "description": "the color of the prefixIcon",
          "$ref": "#/definitions/components.styles.color"
        },
        "prefixIconConstraints": {
          "description": "The constraints for the prefixIcon.",
          "$ref": "#/definitions/components.styles.boxConstraints"
        },
        "prefixStyle": {
          "description": "The style to use for the prefixText.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "prefixText": {
          "description": "The text to display before the input.",
          "type": "string"
        },
        "semanticCounterText": {
          "description": "The semantic label for the counterText.",
          "type": "string"
        },
        "suffix": {
          "type": "object"
        },
        "suffixIcon": {
          "$ref": "#/definitions/components.icon"
        },
        "suffixIconColor": {
          "description": "the color of the sufficIcon",
          "$ref": "#/definitions/components.styles.color"
        },
        "suffixIconConstraints": {
          "description": "The constraints for the suffixIcon.",
          "$ref": "#/definitions/components.styles.boxConstraints"
        },
        "suffixStyle": {
          "description": "The style to use for the suffixText.",
          "$ref": "#/definitions/components.styles.textStyle"
        },
        "suffixText": {
          "description": "The text to display after the input.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "components.styles.brightness": {
      "title": "Brightness",
      "description": "Component of type Brightness.",
      "type": "string",
      "enum": [
        "dark",
        "light"
      ]
    },
    "components.styles.padding": {
      "title": "Padding",
      "description": "Element of type Padding",
      "type": "object",
      "properties": {
        "top": {
          "type": "number",
          "default": 0
        },
        "left": {
          "type": "number",
          "default": 0
        },
        "bottom": {
          "type": "number",
          "default": 0
        },
        "right": {
          "type": "number",
          "default": 0
        }
      },
      "additionalProperties": false
    },
    "components.styles.boxHeightStyle": {
      "title": "BoxHeightStyle",
      "description": "Component of type BoxHeightStyle.",
      "type": "string",
      "enum": [
        "includeLineSpacingBottom",
        "includeLineSpacingMiddle",
        "includeLineSpacingTop",
        "max",
        "strut",
        "tight"
      ]
    },
    "components.styles.boxWidthStyle": {
      "title": "BoxWidthStyle",
      "description": "Component of type BoxWidthStyle.",
      "type": "string",
      "enum": [
        "max",
        "tight"
      ]
    },
    "components.styles.strutStyle": {
      "title": "StrutStyle",
      "description": "Defines the strut of a text line.",
      "type": "object",
      "properties": {
        "debugLabel": {
          "type": "string",
          "description": "A label to help identify this strut style."
        },
        "fontFamily": {
          "type": "string",
          "description": "The font family to use for this strut style."
        },
        "fontFamilyFallback": {
          "type": "array",
          "description": "A list of fallback font families to use for this strut style."
        },
        "fontSize": {
          "type": "number",
          "description": "The font size to use for this strut style."
        },
        "fontWeight": {
          "type": "string",
          "description": "The font weight to use for this strut style."
        },
        "forceStrutHeight": {
          "type": "boolean",
          "description": "Whether to force the strut height."
        },
        "height": {
          "type": "number",
          "description": "The minimum height of the strut."
        },
        "leading": {
          "type": "number",
          "description": "The additional leading of the strut which is a multiple of fontSize."
        },
        "leadingDistribution": {
          "$ref": "#/definitions/components.styles.textLeadingDistribution"
        }
      },
      "additionalProperties": false
    },
    "components.styles.textStyle": {
      "title": "TextStyle",
      "description": "The style of the Text.",
      "type": "object",
      "properties": {
        "color": {
          "description": "The color of the text.",
          "$ref": "#/definitions/components.styles.color"
        },
        "decoration": {
          "$ref": "#/definitions/components.styles.textDecoration"
        },
        "decorationColor": {
          "description": "The color of the decoration.",
          "$ref": "#/definitions/components.styles.color"
        },
        "decorationStyle": {
          "$ref": "#/definitions/components.styles.textDecorationStyle"
        },
        "decorationThickness": {
          "description": "The thickness of the decoration.",
          "type": "number"
        },
        "fontFamily": {
          "description": "The font family of the text.",
          "type": "string"
        },
        "fontFamilyFallback": {
          "description": "The list of font families to use if the first font family could not be found.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fontSize": {
          "description": "The size of the text.",
          "type": "number"
        },
        "fontStyle": {
          "description": "The style of the text.",
          "type": "string",
          "enum": [
            "italic",
            "normal"
          ]
        },
        "fontWeight": {
          "description": "The weight of the text.",
          "type": "string",
          "enum": [
            "bold",
            "normal",
            "w100",
            "w200",
            "w300",
            "w400",
            "w500",
            "w600",
            "w700",
            "w800",
            "w900"
          ]
        },
        "height": {
          "description": "The height of this text.",
          "type": "number",
          "default": 1
        },
        "letterSpacing": {
          "description": "The amount of space to add between each letter.",
          "type": "number"
        },
        "overflow": {
          "description": "How visual text overflow should be handled.",
          "type": "string",
          "enum": [
            "clip",
            "ellipsis",
            "fade",
            "visible"
          ]
        },
        "shadows": {
          "description": "A list of Shadows that will be painted underneath the text.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/components.styles.boxShadow"
          }
        },
        "textBaseline": {
          "description": "The common baseline that should be aligned between this text and its parent text.",
          "$ref": "#/definitions/components.styles.textBaseline"
        },
        "wordSpacing": {
          "description": "The amount of space to add at each sequence of white-space.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "components.styles.textAlign": {
      "title": "TextAlign",
      "description": "Component of type TextAlign.",
      "type": "string",
      "enum": [
        "left",
        "right",
        "center",
        "justify",
        "start",
        "end"
      ]
    },
    "components.styles.textAlignVertical": {
      "title": "TextAlignVertical",
      "description": "Component of type TextAlignVertical.",
      "type": "string",
      "enum": [
        "bottom",
        "center",
        "top"
      ]
    },
    "components.styles.textDecoration": {
      "title": "Text Decoration",
      "description": "Allows you to underline, overline or strike out the text.",
      "type": "string",
      "enum": [
        "lineThrough",
        "overline",
        "underline",
        "none"
      ],
      "default": "none"
    },
    "components.styles.textDecorationStyle": {
      "title": "Text Decoration Style",
      "description": "The style in which to draw a text decoration.",
      "type": "string",
      "enum": [
        "dashed",
        "dotted",
        "double",
        "solid",
        "wavy"
      ],
      "default": "solid"
    },
    "components.styles.boxShadow": {
      "title": "BoxShadow",
      "description": "Element of type BoxShadow",
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/components.styles.color"
        },
        "blurRadius": {
          "description": "The blur radius",
          "type": "number",
          "default": 0
        },
        "spreadRadius": {
          "description": "The spread radius",
          "type": "number",
          "default": 0
        },
        "offset": {
          "$ref": "#/definitions/components.styles.offset"
        }
      },
      "additionalProperties": false
    },
    "components.styles.textBaseline": {
      "title": "TextBaseline",
      "description": "A horizontal line used for aligning text.",
      "type": "string",
      "enum": [
        "alphabetic",
        "ideographic"
      ],
      "default": "alphabetic"
    },
    "components.styles.offset": {
      "title": "Offset",
      "description": "Element of type Offset",
      "type": "object",
      "properties": {
        "dx": {
          "description": "The Offset along the x axis",
          "type": "number",
          "default": 0
        },
        "dy": {
          "description": "The Offset along the y axis",
          "type": "number",
          "default": 0
        }
      },
      "additionalProperties": false
    },
    "components.styles.textLeadingDistribution": {
      "title": "TextLeadingDitribution",
      "description": "The TextLeadingDistribution enum.",
      "type": "string",
      "enum": [
        "even",
        "proportional"
      ],
      "default": "even"
    },
    "components.styles.inputBorder": {
      "title": "InputBorder",
      "description": "Element of type InputBorder",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "underline",
            "outline"
          ],
          "default": "underline"
        },
        "borderRadius": {
          "$ref": "#/definitions/components.styles.borderRadius"
        },
        "borderSide": {
          "$ref": "#/definitions/components.styles.borderSide"
        }
      },
      "required": [
        "borderSide"
      ],
      "additionalProperties": false
    },
    "components.styles.boxConstraints": {
      "title": "BoxConstraints",
      "description": "Element of type BoxConstraints",
      "type": "object",
      "properties": {
        "minWidth": {
          "description": "The minWidth of the constraint",
          "type": "number",
          "default": 0
        },
        "maxWidth": {
          "description": "The maxWidth of the constraint, -1 means Infinity",
          "type": "number",
          "default": -1
        },
        "minHeight": {
          "description": "The minHeight of the constraint",
          "type": "number",
          "default": 0
        },
        "maxHeight": {
          "description": "The maxHeight of the constraint, -1 means Infinity",
          "type": "number",
          "default": -1
        }
      },
      "additionalProperties": false
    },
    "components.styles.floatingLabelBehavior": {
      "title": "FloatingLabelBehavior",
      "description": "Element of type FloatingLabelBehavior.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ]
    },
    "components.styles.borderRadius": {
      "title": "BorderRadius",
      "description": "Element of type BorderRadius",
      "type": "object",
      "properties": {
        "topLeft": {
          "$ref": "#/definitions/components.styles.borderRadius.definitions.radiusType"
        },
        "topRight": {
          "$ref": "#/definitions/components.styles.borderRadius.definitions.radiusType"
        },
        "bottomLeft": {
          "$ref": "#/definitions/components.styles.borderRadius.definitions.radiusType"
        },
        "bottomRight": {
          "$ref": "#/definitions/components.styles.borderRadius.definitions.radiusType"
        }
      },
      "additionalProperties": false,
      "definitions": {}
    },
    "components.styles.borderSide": {
      "title": "BorderSide",
      "description": "Element of type BorderSide",
      "type": "object",
      "properties": {
        "width": {
          "description": "The width of the Border",
          "type": "number",
          "default": 1
        },
        "color": {
          "$ref": "#/definitions/components.styles.color"
        }
      },
      "additionalProperties": false
    },
    "components.styles.borderRadius.definitions.radiusType": {
      "title": "Radius",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "default": 0
        },
        "y": {
          "type": "number",
          "default": 0
        }
      },
      "additionalProperties": false
    },
    "components.styles.locale": {
      "title": "Locale",
      "description": "Element of type locale",
      "type": "object",
      "properties": {
        "countryCode": {
          "description": "The region subtag for the locale.",
          "type": "string"
        },
        "languageCode": {
          "description": "The primary language subtag for the locale.",
          "type": "string"
        },
        "scriptCode": {
          "description": "The script subtag for the locale.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "components.styles.alignment": {
      "title": "Alignment",
      "description": "The alignment to use.",
      "type": "string",
      "enum": [
        "bottomCenter",
        "bottomLeft",
        "bottomRight",
        "center",
        "centerLeft",
        "centerRight",
        "topCenter",
        "topLeft",
        "topRight"
      ],
      "default": "center"
    },
    "components.styles.stackFit": {
      "title": "StackFit",
      "description": "The StackFit enum.",
      "type": "string",
      "enum": [
        "expand",
        "loose",
        "passthrough"
      ],
      "default": "passthrough"
    },
    "components.styles.sliderStyle": {
      "title": "SliderStyle",
      "description": "Element of type SliderStyle",
      "type": "object",
      "properties": {
        "activeColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "inactiveColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "thumbColor": {
          "$ref": "#/definitions/components.styles.color"
        }
      },
      "additionalProperties": false
    },
    "components.styles.materialTapTargetSize": {
      "title": "Material Tap Target Size",
      "description": "Element of type MaterialTapTargetSize",
      "type": "string",
      "enum": [
        "shrinkWrap",
        "padded"
      ]
    },
    "components.styles.radioStyle": {
      "title": "RadioStyle",
      "description": "Element of type RadioStyle",
      "type": "object",
      "properties": {
        "activeColor": {
          "description": "Color of the active radio button",
          "$ref": "#/definitions/components.styles.color"
        },
        "focusColor": {
          "description": "Color of the radio when it is focused",
          "$ref": "#/definitions/components.styles.color"
        },
        "hovercolor": {
          "description": "Color when the mouse is over the element",
          "$ref": "#/definitions/components.styles.color"
        },
        "unselectedColor": {
          "description": "Color when the radio is not selected",
          "$ref": "#/definitions/components.styles.color"
        },
        "splashRadius": {
          "description": "The splash radius of the radio button",
          "type": "number"
        },
        "visualDensity": {
          "$ref": "#/definitions/components.styles.visualDensity"
        }
      },
      "additionalProperties": false
    },
    "components.styles.visualDensity": {
      "title": "VisualDensity",
      "description": "The visual density of UI components.",
      "type": "string",
      "enum": [
        "comfortable",
        "compact",
        "standard"
      ],
      "default": "standard"
    },
    "components.styles.rect": {
      "title": "Rect",
      "description": "Element of type Rect",
      "type": "object",
      "properties": {
        "left": {
          "description": "The left position of the rectangle.",
          "type": "number"
        },
        "top": {
          "description": "The top position of the rectangle.",
          "type": "number"
        },
        "width": {
          "description": "The width of the rectangle.",
          "type": "number"
        },
        "height": {
          "description": "The height of the rectangle.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "components.styles.filterQuality": {
      "title": "Filter Quality",
      "description": "The filter quality to use.",
      "type": "string",
      "enum": [
        "high",
        "medium",
        "low",
        "none"
      ],
      "default": "low"
    },
    "components.styles.boxFit": {
      "title": "Box Fit",
      "description": "How the box should be fitted in its parent.",
      "type": "string",
      "enum": [
        "contain",
        "cover",
        "fill",
        "fitHeight",
        "fitWidth",
        "none",
        "scaleDown"
      ],
      "default": "contain"
    },
    "components.styles.imageRepeat": {
      "title": "Image Repeat",
      "description": "How the image should be painted on the areas that it does not cover.",
      "type": "string",
      "enum": [
        "noRepeat",
        "repeat",
        "repeatX",
        "repeatY"
      ],
      "default": "noRepeat"
    },
    "components.styles.iconName": {
      "title": "IconName",
      "description": "All of the possible values for an Icon.",
      "type": "string",
      "enum": [
        "ac_unit",
        "access_alarm",
        "access_alarms",
        "access_time",
        "access_time_filled",
        "accessibility",
        "accessibility_new",
        "accessible",
        "accessible_forward",
        "account_balance",
        "account_balance_wallet",
        "account_box",
        "account_circle",
        "account_tree",
        "ad_units",
        "adb",
        "add",
        "add_a_photo",
        "add_alarm",
        "add_alert",
        "add_box",
        "add_business",
        "add_call",
        "add_chart",
        "add_circle",
        "add_circle_outline",
        "add_comment",
        "add_ic_call",
        "add_link",
        "add_location",
        "add_location_alt",
        "add_moderator",
        "add_photo_alternate",
        "add_reaction",
        "add_road",
        "add_shopping_cart",
        "add_task",
        "add_to_drive",
        "add_to_home_screen",
        "add_to_photos",
        "add_to_queue",
        "addchart",
        "adjust",
        "admin_panel_settings",
        "agriculture",
        "air",
        "airline_seat_flat",
        "airline_seat_flat_angled",
        "airline_seat_individual_suite",
        "airline_seat_legroom_extra",
        "airline_seat_legroom_normal",
        "airline_seat_legroom_reduced",
        "airline_seat_recline_extra",
        "airline_seat_recline_normal",
        "airplane_ticket",
        "airplanemode_active",
        "airplanemode_inactive",
        "airplanemode_off",
        "airplanemode_on",
        "airplay",
        "airport_shuttle",
        "alarm",
        "alarm_add",
        "alarm_off",
        "alarm_on",
        "album",
        "align_horizontal_center",
        "align_horizontal_left",
        "align_horizontal_right",
        "align_vertical_bottom",
        "align_vertical_center",
        "align_vertical_top",
        "all_inbox",
        "all_inclusive",
        "all_out",
        "alt_route",
        "alternate_email",
        "amp_stories",
        "analytics",
        "anchor",
        "android",
        "animation",
        "announcement",
        "aod",
        "apartment",
        "api",
        "app_blocking",
        "app_registration",
        "app_settings_alt",
        "approval",
        "apps",
        "architecture",
        "archive",
        "arrow_back",
        "arrow_back_ios",
        "arrow_back_ios_new",
        "arrow_circle_down",
        "arrow_circle_up",
        "arrow_downward",
        "arrow_drop_down",
        "arrow_drop_down_circle",
        "arrow_drop_up",
        "arrow_forward",
        "arrow_forward_ios",
        "arrow_left",
        "arrow_right",
        "arrow_right_alt",
        "arrow_upward",
        "art_track",
        "article",
        "aspect_ratio",
        "assessment",
        "assignment",
        "assignment_ind",
        "assignment_late",
        "assignment_return",
        "assignment_returned",
        "assignment_turned_in",
        "assistant",
        "assistant_direction",
        "assistant_navigation",
        "assistant_photo",
        "atm",
        "attach_email",
        "attach_file",
        "attach_money",
        "attachment",
        "attractions",
        "attribution",
        "audiotrack",
        "auto_awesome",
        "auto_awesome_mosaic",
        "auto_awesome_motion",
        "auto_delete",
        "auto_fix_high",
        "auto_fix_normal",
        "auto_fix_off",
        "auto_graph",
        "auto_stories",
        "autofps_select",
        "autorenew",
        "av_timer",
        "baby_changing_station",
        "backpack",
        "backspace",
        "backup",
        "backup_table",
        "badge",
        "bakery_dining",
        "balcony",
        "ballot",
        "bar_chart",
        "batch_prediction",
        "bathroom",
        "bathtub",
        "battery_alert",
        "battery_charging_full",
        "battery_full",
        "battery_saver",
        "battery_std",
        "battery_unknown",
        "beach_access",
        "bed",
        "bedroom_baby",
        "bedroom_child",
        "bedroom_parent",
        "bedtime",
        "beenhere",
        "bento",
        "bike_scooter",
        "biotech",
        "blender",
        "block",
        "block_flipped",
        "bloodtype",
        "bluetooth",
        "bluetooth_audio",
        "bluetooth_connected",
        "bluetooth_disabled",
        "bluetooth_drive",
        "bluetooth_searching",
        "blur_circular",
        "blur_linear",
        "blur_off",
        "blur_on",
        "bolt",
        "book",
        "book_online",
        "bookmark",
        "bookmark_add",
        "bookmark_added",
        "bookmark_border",
        "bookmark_outline",
        "bookmark_remove",
        "bookmarks",
        "border_all",
        "border_bottom",
        "border_clear",
        "border_color",
        "border_horizontal",
        "border_inner",
        "border_left",
        "border_outer",
        "border_right",
        "border_style",
        "border_top",
        "border_vertical",
        "branding_watermark",
        "breakfast_dining",
        "brightness_1",
        "brightness_2",
        "brightness_3",
        "brightness_4",
        "brightness_5",
        "brightness_6",
        "brightness_7",
        "brightness_auto",
        "brightness_high",
        "brightness_low",
        "brightness_medium",
        "broken_image",
        "browser_not_supported",
        "brunch_dining",
        "brush",
        "bubble_chart",
        "bug_report",
        "build",
        "build_circle",
        "bungalow",
        "burst_mode",
        "bus_alert",
        "business",
        "business_center",
        "cabin",
        "cable",
        "cached",
        "cake",
        "calculate",
        "calendar_today",
        "calendar_view_day",
        "calendar_view_month",
        "calendar_view_week",
        "call",
        "call_end",
        "call_made",
        "call_merge",
        "call_missed",
        "call_missed_outgoing",
        "call_received",
        "call_split",
        "call_to_action",
        "camera",
        "camera_alt",
        "camera_enhance",
        "camera_front",
        "camera_indoor",
        "camera_outdoor",
        "camera_rear",
        "camera_roll",
        "cameraswitch",
        "campaign",
        "cancel",
        "cancel_presentation",
        "cancel_schedule_send",
        "car_rental",
        "car_repair",
        "card_giftcard",
        "card_membership",
        "card_travel",
        "carpenter",
        "cases",
        "casino",
        "cast",
        "cast_connected",
        "cast_for_education",
        "catching_pokemon",
        "category",
        "celebration",
        "cell_wifi",
        "center_focus_strong",
        "center_focus_weak",
        "chair",
        "chair_alt",
        "chalet",
        "change_circle",
        "change_history",
        "charging_station",
        "chat",
        "chat_bubble",
        "chat_bubble_outline",
        "check",
        "check_box",
        "check_box_outline_blank",
        "check_circle",
        "check_circle_outline",
        "checklist",
        "checklist_rtl",
        "checkroom",
        "chevron_left",
        "chevron_right",
        "child_care",
        "child_friendly",
        "chrome_reader_mode",
        "circle",
        "circle_notifications",
        "class_",
        "clean_hands",
        "cleaning_services",
        "clear",
        "clear_all",
        "close",
        "close_fullscreen",
        "closed_caption",
        "closed_caption_disabled",
        "closed_caption_off",
        "cloud",
        "cloud_circle",
        "cloud_done",
        "cloud_download",
        "cloud_off",
        "cloud_queue",
        "cloud_upload",
        "code",
        "code_off",
        "coffee",
        "coffee_maker",
        "collections",
        "collections_bookmark",
        "color_lens",
        "colorize",
        "comment",
        "comment_bank",
        "commute",
        "compare",
        "compare_arrows",
        "compass_calibration",
        "compress",
        "computer",
        "confirmation_num",
        "confirmation_number",
        "connect_without_contact",
        "connected_tv",
        "construction",
        "contact_mail",
        "contact_page",
        "contact_phone",
        "contact_support",
        "contactless",
        "contacts",
        "content_copy",
        "content_cut",
        "content_paste",
        "content_paste_off",
        "control_camera",
        "control_point",
        "control_point_duplicate",
        "copy",
        "copy_all",
        "copyright",
        "coronavirus",
        "corporate_fare",
        "cottage",
        "countertops",
        "create",
        "create_new_folder",
        "credit_card",
        "credit_card_off",
        "credit_score",
        "crib",
        "crop",
        "crop_16_9",
        "crop_3_2",
        "crop_5_4",
        "crop_7_5",
        "crop_din",
        "crop_free",
        "crop_landscape",
        "crop_original",
        "crop_portrait",
        "crop_rotate",
        "crop_square",
        "cut",
        "dangerous",
        "dark_mode",
        "dashboard",
        "dashboard_customize",
        "data_saver_off",
        "data_saver_on",
        "data_usage",
        "date_range",
        "deck",
        "dehaze",
        "delete",
        "delete_forever",
        "delete_outline",
        "delete_sweep",
        "delivery_dining",
        "departure_board",
        "description",
        "design_services",
        "desktop_access_disabled",
        "desktop_mac",
        "desktop_windows",
        "details",
        "developer_board",
        "developer_board_off",
        "developer_mode",
        "device_hub",
        "device_thermostat",
        "device_unknown",
        "devices",
        "devices_other",
        "dialer_sip",
        "dialpad",
        "dining",
        "dinner_dining",
        "directions",
        "directions_bike",
        "directions_boat",
        "directions_boat_filled",
        "directions_bus",
        "directions_bus_filled",
        "directions_car",
        "directions_car_filled",
        "directions_ferry",
        "directions_off",
        "directions_railway_filled",
        "directions_run",
        "directions_railway",
        "directions_subway",
        "directions_subway_filled",
        "directions_train",
        "directions_transit",
        "directions_transit_filled",
        "directions_walk",
        "dirty_lens",
        "disabled_by_default",
        "disc_full",
        "dnd_forwardslash",
        "dns",
        "do_disturb",
        "do_disturb_alt",
        "do_disturb_off",
        "do_disturb_on",
        "do_not_disturb",
        "do_not_disturb_alt",
        "do_not_disturb_off",
        "do_not_disturb_on",
        "do_not_disturb_on_total_silence",
        "do_not_step",
        "do_not_touch",
        "dock",
        "document_scanner",
        "domain",
        "domain_disabled",
        "domain_verification",
        "done",
        "done_all",
        "done_outline",
        "donut_large",
        "donut_small",
        "door_back",
        "door_front",
        "door_sliding",
        "doorbell",
        "double_arrow",
        "downhill_skiing",
        "download",
        "download_done",
        "download_for_offline",
        "downloading",
        "drafts",
        "drag_handle",
        "drag_indicator",
        "drive_eta",
        "drive_file_move",
        "drive_file_move_outline",
        "drive_file_rename_outline",
        "drive_folder_upload",
        "dry",
        "dry_cleaning",
        "duo",
        "dvr",
        "dynamic_feed",
        "dynamic_form",
        "e_mobiledata",
        "earbuds",
        "earbuds_battery",
        "east",
        "eco",
        "edgesensor_high",
        "edgesensor_low",
        "edit",
        "edit_attributes",
        "edit_location",
        "edit_location_alt",
        "edit_notifications",
        "edit_off",
        "edit_road",
        "eight_k",
        "eight_k_plus",
        "eight_mp",
        "eighteen_mp",
        "eject",
        "elderly",
        "electric_bike",
        "electric_car",
        "electric_moped",
        "electric_rickshaw",
        "electric_scooter",
        "electrical_services",
        "elevator",
        "eleven_mp",
        "email",
        "emoji_emotions",
        "emoji_events",
        "emoji_flags",
        "emoji_food_beverage",
        "emoji_nature",
        "emoji_objects",
        "emoji_people",
        "emoji_symbols",
        "emoji_transportation",
        "engineering",
        "enhance_photo_translate",
        "enhanced_encryption",
        "equalizer",
        "error",
        "error_outline",
        "escalator",
        "escalator_warning",
        "euro",
        "euro_symbol",
        "ev_station",
        "event",
        "event_available",
        "event_busy",
        "event_note",
        "event_seat",
        "exit_to_app",
        "expand",
        "expand_less",
        "expand_more",
        "explicit",
        "explore",
        "explore_off",
        "exposure",
        "exposure_minus_1",
        "exposure_minus_2",
        "exposure_neg_1",
        "exposure_neg_2",
        "exposure_plus_1",
        "exposure_plus_2",
        "exposure_zero",
        "extension",
        "extension_off",
        "face",
        "face_retouching_off",
        "face_retouching_natural",
        "facebook",
        "fact_check",
        "family_restroom",
        "fast_forward",
        "fast_rewind",
        "fastfood",
        "favorite",
        "favorite_border",
        "favorite_outline",
        "featured_play_list",
        "featured_video",
        "feed",
        "feedback",
        "female",
        "fence",
        "festival",
        "fiber_dvr",
        "fiber_manual_record",
        "fiber_new",
        "fiber_pin",
        "fiber_smart_record",
        "fifteen_mp",
        "file_copy",
        "file_download",
        "file_download_done",
        "file_download_off",
        "file_present",
        "file_upload",
        "filter",
        "filter_1",
        "filter_2",
        "filter_3",
        "filter_4",
        "filter_5",
        "filter_6",
        "filter_7",
        "filter_8",
        "filter_9",
        "filter_9_plus",
        "filter_alt",
        "filter_b_and_w",
        "filter_center_focus",
        "filter_drama",
        "filter_frames",
        "filter_hdr",
        "filter_list",
        "filter_list_alt",
        "filter_none",
        "filter_tilt_shift",
        "filter_vintage",
        "find_in_page",
        "find_replace",
        "fingerprint",
        "fire_extinguisher",
        "fire_hydrant",
        "fireplace",
        "first_page",
        "fit_screen",
        "fitness_center",
        "five_g",
        "five_k",
        "five_k_plus",
        "five_mp",
        "flag",
        "flaky",
        "flare",
        "flash_auto",
        "flash_off",
        "flash_on",
        "flashlight_off",
        "flashlight_on",
        "flatware",
        "flight",
        "flight_land",
        "flight_takeoff",
        "flip",
        "flip_camera_android",
        "flip_camera_ios",
        "flip_to_back",
        "flip_to_front",
        "flourescent",
        "flutter_dash",
        "fmd_bad",
        "fmd_good",
        "folder",
        "folder_open",
        "folder_shared",
        "folder_special",
        "follow_the_signs",
        "font_download",
        "font_download_off",
        "food_bank",
        "format_align_center",
        "format_align_justify",
        "format_align_left",
        "format_align_right",
        "format_bold",
        "format_clear",
        "format_color_fill",
        "format_color_reset",
        "format_color_text",
        "format_indent_decrease",
        "format_indent_increase",
        "format_italic",
        "format_line_spacing",
        "format_list_bulleted",
        "format_list_numbered",
        "format_list_numbered_rtl",
        "format_paint",
        "format_quote",
        "format_shapes",
        "format_size",
        "format_strikethrough",
        "format_textdirection_l_to_r",
        "format_textdirection_r_to_l",
        "format_underline",
        "format_underlined",
        "forum",
        "forward",
        "forward_10",
        "forward_30",
        "forward_5",
        "forward_to_inbox",
        "foundation",
        "four_g_mobiledata",
        "four_g_plus_mobiledata",
        "four_k",
        "four_k_plus",
        "four_mp",
        "fourteen_mp",
        "free_breakfast",
        "fullscreen",
        "fullscreen_exit",
        "functions",
        "g_mobiledata",
        "g_translate",
        "gamepad",
        "games",
        "garage",
        "gavel",
        "gesture",
        "get_app",
        "gif",
        "gite",
        "golf_course",
        "gpp_bad",
        "gpp_good",
        "gpp_maybe",
        "gps_fixed",
        "gps_not_fixed",
        "gps_off",
        "grade",
        "gradient",
        "grading",
        "grain",
        "graphic_eq",
        "grass",
        "grid_3x3",
        "grid_4x4",
        "grid_goldenratio",
        "grid_off",
        "grid_on",
        "grid_view",
        "group",
        "group_add",
        "group_work",
        "groups",
        "h_mobiledata",
        "h_plus_mobiledata",
        "hail",
        "handyman",
        "hardware",
        "hd",
        "hdr_auto",
        "hdr_auto_select",
        "hdr_enhanced_select",
        "hdr_off",
        "hdr_off_select",
        "hdr_on",
        "hdr_on_select",
        "hdr_plus",
        "hdr_strong",
        "hdr_weak",
        "headphones",
        "headphones_battery",
        "headset",
        "headset_mic",
        "headset_off",
        "healing",
        "health_and_safety",
        "hearing",
        "hearing_disabled",
        "height",
        "help",
        "help_center",
        "help_outline",
        "hevc",
        "hide_image",
        "hide_source",
        "high_quality",
        "highlight",
        "highlight_alt",
        "highlight_off",
        "highlight_remove",
        "hiking",
        "history",
        "history_edu",
        "history_toggle_off",
        "holiday_village",
        "home",
        "home_filled",
        "home_max",
        "home_mini",
        "home_repair_service",
        "home_work",
        "horizontal_distribute",
        "horizontal_rule",
        "horizontal_split",
        "hot_tub",
        "hotel",
        "hourglass_bottom",
        "hourglass_disabled",
        "hourglass_empty",
        "hourglass_full",
        "hourglass_top",
        "house",
        "house_siding",
        "houseboat",
        "how_to_reg",
        "how_to_vote",
        "http",
        "https",
        "hvac",
        "ice_skating",
        "icecream",
        "image",
        "image_aspect_ratio",
        "image_not_supported",
        "image_search",
        "imagesearch_roller",
        "import_contacts",
        "import_export",
        "important_devices",
        "inbox",
        "indeterminate_check_box",
        "info",
        "info_outline",
        "input",
        "insert_chart",
        "insert_comment",
        "insert_drive_file",
        "insert_emoticon",
        "insert_invitation",
        "insert_link",
        "insert_photo",
        "insights",
        "integration_instructions",
        "inventory",
        "inventory_2",
        "invert_colors",
        "invert_colors_off",
        "invert_colors_on",
        "ios_share",
        "iron",
        "iso",
        "kayaking",
        "keyboard",
        "keyboard_alt",
        "keyboard_arrow_down",
        "keyboard_arrow_left",
        "keyboard_arrow_right",
        "keyboard_arrow_up",
        "keyboard_backspace",
        "keyboard_capslock",
        "keyboard_control",
        "keyboard_hide",
        "keyboard_return",
        "keyboard_tab",
        "keyboard_voice",
        "king_bed",
        "kitchen",
        "kitesurfing",
        "label",
        "label_important",
        "label_important_outline",
        "label_off",
        "label_outline",
        "landscape",
        "language",
        "laptop",
        "laptop_chromebook",
        "laptop_mac",
        "laptop_windows",
        "last_page",
        "launch",
        "layers",
        "layers_clear",
        "leaderboard",
        "leak_add",
        "leak_remove",
        "leave_bags_at_home",
        "legend_toggle",
        "lens",
        "lens_blur",
        "library_add",
        "library_add_check",
        "library_books",
        "library_music",
        "light",
        "light_mode",
        "lightbulb",
        "lightbulb_outline",
        "line_style",
        "line_weight",
        "linear_scale",
        "link",
        "link_off",
        "linked_camera",
        "liquor",
        "list",
        "list_alt",
        "live_help",
        "live_tv",
        "living",
        "local_activity",
        "local_airport",
        "local_atm",
        "local_attraction",
        "local_bar",
        "local_cafe",
        "local_car_wash",
        "local_convenience_store",
        "local_dining",
        "local_drink",
        "local_fire_department",
        "local_florist",
        "local_gas_station",
        "local_grocery_store",
        "local_hospital",
        "local_hotel",
        "local_laundry_service",
        "local_library",
        "local_mall",
        "local_movies",
        "local_offer",
        "local_parking",
        "local_pharmacy",
        "local_phone",
        "local_pizza",
        "local_play",
        "local_police",
        "local_post_office",
        "local_print_shop",
        "local_printshop",
        "local_restaurant",
        "local_see",
        "local_shipping",
        "local_taxi",
        "location_city",
        "location_disabled",
        "location_history",
        "location_off",
        "location_on",
        "location_pin",
        "location_searching",
        "lock",
        "lock_clock",
        "lock_open",
        "lock_outline",
        "login",
        "logout",
        "looks",
        "looks_3",
        "looks_4",
        "looks_5",
        "looks_6",
        "looks_one",
        "looks_two",
        "loop",
        "loupe",
        "low_priority",
        "loyalty",
        "lte_mobiledata",
        "lte_plus_mobiledata",
        "luggage",
        "lunch_dining",
        "mail",
        "mail_outline",
        "male",
        "manage_accounts",
        "manage_search",
        "map",
        "maps_home_work",
        "maps_ugc",
        "margin",
        "mark_as_unread",
        "mark_chat_read",
        "mark_chat_unread",
        "mark_email_read",
        "mark_email_unread",
        "markunread",
        "markunread_mailbox",
        "masks",
        "maximize",
        "media_bluetooth_off",
        "media_bluetooth_on",
        "mediation",
        "medical_services",
        "medication",
        "meeting_room",
        "memory",
        "menu",
        "menu_book",
        "menu_open",
        "merge_type",
        "message",
        "messenger",
        "messenger_outline",
        "mic",
        "mic_external_off",
        "mic_external_on",
        "mic_none",
        "mic_off",
        "microwave",
        "military_tech",
        "minimize",
        "miscellaneous_services",
        "missed_video_call",
        "mms",
        "mobile_friendly",
        "mobile_off",
        "mobile_screen_share",
        "mobiledata_off",
        "mode",
        "mode_comment",
        "mode_edit",
        "mode_edit_outline",
        "mode_night",
        "mode_standby",
        "model_training",
        "monetization_on",
        "money",
        "money_off",
        "money_off_csred",
        "monitor",
        "monitor_weight",
        "monochrome_photos",
        "mood",
        "mood_bad",
        "moped",
        "more",
        "more_horiz",
        "more_time",
        "more_vert",
        "motion_photos_auto",
        "motion_photos_off",
        "motion_photos_on",
        "motion_photos_pause",
        "motion_photos_paused",
        "motorcycle",
        "mouse",
        "move_to_inbox",
        "movie",
        "movie_creation",
        "movie_filter",
        "moving",
        "mp",
        "multiline_chart",
        "multiple_stop",
        "multitrack_audio",
        "museum",
        "music_note",
        "music_off",
        "music_video",
        "my_library_add",
        "my_library_books",
        "my_library_music",
        "my_location",
        "nat",
        "nature",
        "nature_people",
        "navigate_before",
        "navigate_next",
        "navigation",
        "near_me",
        "near_me_disabled",
        "nearby_error",
        "nearby_off",
        "network_cell",
        "network_check",
        "network_locked",
        "network_wifi",
        "new_label",
        "new_releases",
        "next_plan",
        "next_week",
        "nfc",
        "night_shelter",
        "nightlife",
        "nightlight",
        "nightlight_round",
        "nights_stay",
        "nine_k",
        "nine_k_plus",
        "nine_mp",
        "nineteen_mp",
        "no_accounts",
        "no_backpack",
        "no_cell",
        "no_drinks",
        "no_encryption",
        "no_encryption_gmailerrorred",
        "no_flash",
        "no_food",
        "no_luggage",
        "no_meals",
        "no_meals_ouline",
        "no_meeting_room",
        "no_photography",
        "no_sim",
        "no_stroller",
        "no_transfer",
        "nordic_walking",
        "north",
        "north_east",
        "north_west",
        "not_accessible",
        "not_interested",
        "not_listed_location",
        "not_started",
        "note",
        "note_add",
        "note_alt",
        "notes",
        "notification_add",
        "notification_important",
        "notifications",
        "notifications_active",
        "notifications_none",
        "notifications_off",
        "notifications_on",
        "notifications_paused",
        "now_wallpaper",
        "now_widgets",
        "offline_bolt",
        "offline_pin",
        "offline_share",
        "ondemand_video",
        "one_k",
        "one_k_plus",
        "one_x_mobiledata",
        "online_prediction",
        "opacity",
        "open_in_browser",
        "open_in_full",
        "open_in_new",
        "open_in_new_off",
        "open_with",
        "other_houses",
        "outbond",
        "outbound",
        "outbox",
        "outdoor_grill",
        "outgoing_mail",
        "outlet",
        "outlined_flag",
        "padding",
        "pages",
        "pageview",
        "paid",
        "palette",
        "pan_tool",
        "panorama",
        "panorama_fish_eye",
        "panorama_fisheye",
        "panorama_horizontal",
        "panorama_horizontal_select",
        "panorama_photosphere",
        "panorama_photosphere_select",
        "panorama_vertical",
        "panorama_vertical_select",
        "panorama_wide_angle",
        "panorama_wide_angle_select",
        "paragliding",
        "park",
        "party_mode",
        "password",
        "paste",
        "pattern",
        "pause",
        "pause_circle",
        "pause_circle_filled",
        "pause_circle_outline",
        "pause_presentation",
        "payment",
        "payments",
        "pedal_bike",
        "pending",
        "pending_actions",
        "people",
        "people_alt",
        "people_outline",
        "perm_camera_mic",
        "perm_contact_cal",
        "perm_contact_calendar",
        "perm_data_setting",
        "perm_device_info",
        "perm_device_information",
        "perm_identity",
        "perm_media",
        "perm_phone_msg",
        "perm_scan_wifi",
        "person",
        "person_add",
        "person_add_alt",
        "person_add_alt_1",
        "person_add_disabled",
        "person_off",
        "person_outline",
        "person_pin",
        "person_pin_circle",
        "person_remove",
        "person_remove_alt_1",
        "person_search",
        "personal_injury",
        "personal_video",
        "pest_control",
        "pest_control_rodent",
        "pets",
        "phone",
        "phone_android",
        "phone_bluetooth_speaker",
        "phone_callback",
        "phone_disabled",
        "phone_enabled",
        "phone_forwarded",
        "phone_in_talk",
        "phone_iphone",
        "phone_locked",
        "phone_missed",
        "phone_paused",
        "phonelink",
        "phonelink_erase",
        "phonelink_lock",
        "phonelink_off",
        "phonelink_ring",
        "phonelink_setup",
        "photo",
        "photo_album",
        "photo_camera",
        "photo_camera_back",
        "photo_camera_front",
        "photo_filter",
        "photo_library",
        "photo_size_select_actual",
        "photo_size_select_large",
        "photo_size_select_small",
        "piano",
        "piano_off",
        "picture_as_pdf",
        "picture_in_picture",
        "picture_in_picture_alt",
        "pie_chart",
        "pie_chart_outline",
        "pin",
        "pin_drop",
        "pivot_table_chart",
        "place",
        "plagiarism",
        "play_arrow",
        "play_circle",
        "play_circle_fill",
        "play_circle_filled",
        "play_circle_outline",
        "play_disabled",
        "play_for_work",
        "play_lesson",
        "playlist_add",
        "playlist_add_check",
        "playlist_play",
        "plumbing",
        "plus_one",
        "podcasts",
        "point_of_sale",
        "policy",
        "poll",
        "polymer",
        "pool",
        "portable_wifi_off",
        "portrait",
        "post_add",
        "power",
        "power_input",
        "power_off",
        "power_settings_new",
        "precision_manufacturing",
        "pregnant_woman",
        "present_to_all",
        "preview",
        "price_change",
        "price_check",
        "print",
        "print_disabled",
        "priority_high",
        "privacy_tip",
        "production_quantity_limits",
        "psychology",
        "public",
        "public_off",
        "publish",
        "published_with_changes",
        "push_pin",
        "qr_code",
        "qr_code_2",
        "qr_code_scanner",
        "query_builder",
        "query_stats",
        "question_answer",
        "queue",
        "queue_music",
        "queue_play_next",
        "quick_contacts_dialer",
        "quick_contacts_mail",
        "quickreply",
        "quiz",
        "r_mobiledata",
        "radar",
        "radio",
        "radio_button_checked",
        "radio_button_off",
        "radio_button_on",
        "radio_button_unchecked",
        "railway_alert",
        "ramen_dining",
        "rate_review",
        "raw_off",
        "raw_on",
        "read_more",
        "real_estate_agent",
        "receipt",
        "receipt_long",
        "recent_actors",
        "recommend",
        "record_voice_over",
        "redeem",
        "redo",
        "reduce_capacity",
        "refresh",
        "remember_me",
        "remove",
        "remove_circle",
        "remove_circle_outline",
        "remove_done",
        "remove_from_queue",
        "remove_moderator",
        "remove_red_eye",
        "remove_shopping_cart",
        "reorder",
        "repeat",
        "repeat_on",
        "repeat_one",
        "repeat_one_on",
        "replay",
        "replay_10",
        "replay_30",
        "replay_5",
        "replay_circle_filled",
        "reply",
        "reply_all",
        "report",
        "report_gmailerrorred",
        "report_off",
        "report_problem",
        "request_page",
        "request_quote",
        "reset_tv",
        "restart_alt",
        "restaurant",
        "restaurant_menu",
        "restore",
        "restore_from_trash",
        "restore_page",
        "reviews",
        "rice_bowl",
        "ring_volume",
        "roofing",
        "room",
        "room_preferences",
        "room_service",
        "rotate_90_degrees_ccw",
        "rotate_left",
        "rotate_right",
        "rounded_corner",
        "router",
        "rowing",
        "rss_feed",
        "rsvp",
        "rtt",
        "rule",
        "rule_folder",
        "run_circle",
        "running_with_errors",
        "rv_hookup",
        "safety_divider",
        "sailing",
        "sanitizer",
        "satellite",
        "save",
        "save_alt",
        "saved_search",
        "savings",
        "scanner",
        "scatter_plot",
        "schedule",
        "schedule_send",
        "schema",
        "school",
        "science",
        "score",
        "screen_lock_landscape",
        "screen_lock_portrait",
        "screen_lock_rotation",
        "screen_rotation",
        "screen_search_desktop",
        "screen_share",
        "screenshot",
        "sd",
        "sd_card",
        "sd_card_alert",
        "sd_storage",
        "search",
        "search_off",
        "security",
        "security_update",
        "security_update_good",
        "security_update_warning",
        "segment",
        "select_all",
        "self_improvement",
        "sell",
        "send",
        "send_and_archive",
        "send_to_mobile",
        "sensor_door",
        "sensor_window",
        "sensors",
        "sensors_off",
        "sentiment_dissatisfied",
        "sentiment_neutral",
        "sentiment_satisfied",
        "sentiment_satisfied_alt",
        "sentiment_very_dissatisfied",
        "sentiment_very_satisfied",
        "set_meal",
        "settings",
        "settings_accessibility",
        "settings_applications",
        "settings_backup_restore",
        "settings_bluetooth",
        "settings_brightness",
        "settings_cell",
        "settings_display",
        "settings_ethernet",
        "settings_input_antenna",
        "settings_input_component",
        "settings_input_composite",
        "settings_input_hdmi",
        "settings_input_svideo",
        "settings_overscan",
        "settings_phone",
        "settings_power",
        "settings_remote",
        "settings_suggest",
        "settings_system_daydream",
        "settings_voice",
        "seven_k",
        "seven_k_plus",
        "seven_mp",
        "seventeen_mp",
        "share",
        "share_arrival_time",
        "share_location",
        "shield",
        "shop",
        "shop_2",
        "shop_two",
        "shopping_bag",
        "shopping_basket",
        "shopping_cart",
        "short_text",
        "shortcut",
        "show_chart",
        "shower",
        "shuffle",
        "shuffle_on",
        "shutter_speed",
        "sick",
        "signal_cellular_0_bar",
        "signal_cellular_4_bar",
        "signal_cellular_alt",
        "signal_cellular_connected_no_internet_0_bar",
        "signal_cellular_connected_no_internet_4_bar",
        "signal_cellular_no_sim",
        "signal_cellular_nodata",
        "signal_cellular_null",
        "signal_cellular_off",
        "signal_wifi_0_bar",
        "signal_wifi_4_bar",
        "signal_wifi_4_bar_lock",
        "signal_wifi_bad",
        "signal_wifi_connected_no_internet_4",
        "signal_wifi_off",
        "signal_wifi_statusbar_4_bar",
        "signal_wifi_statusbar_connected_no_internet_4",
        "signal_wifi_statusbar_null",
        "sim_card",
        "sim_card_alert",
        "sim_card_download",
        "single_bed",
        "sip",
        "six_ft_apart",
        "six_k",
        "six_k_plus",
        "six_mp",
        "sixteen_mp",
        "sixty_fps",
        "sixty_fps_select",
        "skateboarding",
        "skip_next",
        "skip_previous",
        "sledding",
        "slideshow",
        "slow_motion_video",
        "smart_button",
        "smart_display",
        "smart_screen",
        "smart_toy",
        "smartphone",
        "smoke_free",
        "smoking_rooms",
        "sms",
        "sms_failed",
        "snippet_folder",
        "snooze",
        "snowboarding",
        "snowmobile",
        "snowshoeing",
        "soap",
        "social_distance",
        "sort",
        "sort_by_alpha",
        "source",
        "south",
        "south_east",
        "south_west",
        "spa",
        "space_bar",
        "space_dashboard",
        "speaker",
        "speaker_group",
        "speaker_notes",
        "speaker_notes_off",
        "speaker_phone",
        "speed",
        "spellcheck",
        "splitscreen",
        "sports",
        "sports_bar",
        "sports_baseball",
        "sports_basketball",
        "sports_cricket",
        "sports_esports",
        "sports_football",
        "sports_golf",
        "sports_handball",
        "sports_hockey",
        "sports_kabaddi",
        "sports_mma",
        "sports_motorsports",
        "sports_rugby",
        "sports_score",
        "sports_soccer",
        "sports_tennis",
        "sports_volleyball",
        "square_foot",
        "stacked_bar_chart",
        "stacked_line_chart",
        "stairs",
        "star",
        "star_border",
        "star_border_purple500",
        "star_half",
        "star_outline",
        "star_purple500",
        "star_rate",
        "stars",
        "stay_current_landscape",
        "stay_current_portrait",
        "stay_primary_landscape",
        "stay_primary_portrait",
        "sticky_note_2",
        "stop",
        "stop_circle",
        "stop_screen_share",
        "storage",
        "store",
        "store_mall_directory",
        "storefront",
        "storm",
        "straighten",
        "stream",
        "streetview",
        "strikethrough_s",
        "stroller",
        "style",
        "subdirectory_arrow_left",
        "subdirectory_arrow_right",
        "subject",
        "subscript",
        "subscriptions",
        "subtitles",
        "subtitles_off",
        "subway",
        "summarize",
        "superscript",
        "supervised_user_circle",
        "supervisor_account",
        "support",
        "support_agent",
        "surfing",
        "surround_sound",
        "swap_calls",
        "swap_horiz",
        "swap_horizontal_circle",
        "swap_vert",
        "swap_vert_circle",
        "swap_vertical_circle",
        "swipe",
        "switch_account",
        "switch_camera",
        "switch_left",
        "switch_right",
        "switch_video",
        "sync",
        "sync_alt",
        "sync_disabled",
        "sync_problem",
        "system_security_update",
        "system_security_update_good",
        "system_security_update_warning",
        "system_update",
        "system_update_alt",
        "system_update_tv",
        "tab",
        "tab_unselected",
        "table_chart",
        "table_rows",
        "table_view",
        "tablet",
        "tablet_android",
        "tablet_mac",
        "tag",
        "tag_faces",
        "takeout_dining",
        "tap_and_play",
        "tapas",
        "task",
        "task_alt",
        "taxi_alert",
        "ten_k",
        "ten_mp",
        "terrain",
        "text_fields",
        "text_format",
        "text_rotate_up",
        "text_rotate_vertical",
        "text_rotation_angledown",
        "text_rotation_angleup",
        "text_rotation_down",
        "text_rotation_none",
        "text_snippet",
        "textsms",
        "texture",
        "theater_comedy",
        "theaters",
        "thermostat",
        "thermostat_auto",
        "thirteen_mp",
        "thirty_fps",
        "thirty_fps_select",
        "three_g_mobiledata",
        "three_k",
        "three_k_plus",
        "three_mp",
        "three_p",
        "threed_rotation",
        "threesixty",
        "thumb_down",
        "thumb_down_alt",
        "thumb_down_off_alt",
        "thumb_up",
        "thumb_up_alt",
        "thumb_up_off_alt",
        "thumbs_up_down",
        "time_to_leave",
        "timelapse",
        "timeline",
        "timer",
        "timer_10",
        "timer_10_select",
        "timer_3",
        "timer_3_select",
        "timer_off",
        "title",
        "toc",
        "today",
        "toggle_off",
        "toggle_on",
        "toll",
        "tonality",
        "topic",
        "touch_app",
        "tour",
        "toys",
        "track_changes",
        "traffic",
        "train",
        "tram",
        "transfer_within_a_station",
        "transform",
        "transgender",
        "transit_enterexit",
        "translate",
        "travel_explore",
        "trending_down",
        "trending_flat",
        "trending_neutral",
        "trending_up",
        "trip_origin",
        "try_sms_star",
        "tty",
        "tune",
        "tungsten",
        "turned_in",
        "turned_in_not",
        "tv",
        "tv_off",
        "twelve_mp",
        "twenty_four_mp",
        "twenty_mp",
        "twenty_one_mp",
        "twenty_three_mp",
        "twenty_two_mp",
        "two_k",
        "two_k_plus",
        "two_mp",
        "two_wheeler",
        "umbrella",
        "unarchive",
        "undo",
        "unfold_less",
        "unfold_more",
        "unpublished",
        "unsubscribe",
        "upcoming",
        "update",
        "update_disabled",
        "upgrade",
        "upload",
        "upload_file",
        "usb",
        "usb_off",
        "verified",
        "verified_user",
        "vertical_align_bottom",
        "vertical_align_center",
        "vertical_align_top",
        "vertical_distribute",
        "vertical_split",
        "vibration",
        "video_call",
        "video_camera_back",
        "video_camera_front",
        "video_collection",
        "video_label",
        "video_library",
        "video_settings",
        "video_stable",
        "videocam",
        "videocam_off",
        "videogame_asset",
        "videogame_asset_off",
        "view_agenda",
        "view_array",
        "view_carousel",
        "view_column",
        "view_comfortable",
        "view_comfy",
        "view_compact",
        "view_day",
        "view_headline",
        "view_in_ar",
        "view_list",
        "view_module",
        "view_quilt",
        "view_sidebar",
        "view_stream",
        "view_week",
        "vignette",
        "villa",
        "visibility",
        "visibility_off",
        "voice_chat",
        "voice_over_off",
        "voicemail",
        "volume_down",
        "volume_mute",
        "volume_off",
        "volume_up",
        "volunteer_activism",
        "vpn_key",
        "vpn_lock",
        "vrpano",
        "wallet_giftcard",
        "wallet_membership",
        "wallet_travel",
        "wallpaper",
        "warning",
        "warning_amber",
        "wash",
        "watch",
        "watch_later",
        "water",
        "water_damage",
        "waterfall_chart",
        "waves",
        "wb_auto",
        "wb_cloudy",
        "wb_incandescent",
        "wb_iridescent",
        "wb_shade",
        "wb_sunny",
        "wb_twighlight",
        "wb_twilight",
        "wc",
        "web",
        "web_asset",
        "web_asset_off",
        "web_stories",
        "weekend",
        "west",
        "whatshot",
        "wheelchair_pickup",
        "where_to_vote",
        "widgets",
        "wifi",
        "wifi_calling",
        "wifi_calling_3",
        "wifi_lock",
        "wifi_off",
        "wifi_protected_setup",
        "wifi_tethering",
        "wifi_tethering_off",
        "window",
        "wine_bar",
        "work",
        "work_off",
        "work_outline",
        "workspaces",
        "workspaces_filled",
        "workspaces_outline",
        "wrap_text",
        "wrong_location",
        "wysiwyg",
        "yard",
        "youtube_searched_for",
        "zoom_in",
        "zoom_out",
        "zoom_out_map",
        "zoom_out_outlined"
      ]
    },
    "components.icon.definitions.iconStyle": {
      "type": "string",
      "description": "The style of the Icon",
      "enum": [
        "filled",
        "sharp",
        "rounded",
        "outlined"
      ],
      "default": "filled"
    },
    "components.styles.flexFit": {
      "title": "FlexFit",
      "description": "How a flexible child is inscribed into the available space.",
      "type": "string",
      "enum": [
        "loose",
        "tight"
      ],
      "default": "loose"
    },
    "components.styles.size": {
      "title": "Size",
      "description": "The size to use, the component will be sized according to the value.",
      "type": "string",
      "enum": [
        "small",
        "medium",
        "large"
      ],
      "default": "medium"
    },
    "components.styles.style": {
      "title": "Style",
      "description": "The style to use, the component will be changed according to the theme.",
      "type": "string",
      "enum": [
        "primary",
        "secondary",
        "tertiary"
      ],
      "default": "primary"
    },
    "components.styles.border": {
      "title": "Border",
      "description": "Element of type Border",
      "type": "object",
      "properties": {
        "top": {
          "$ref": "#/definitions/components.styles.borderSide"
        },
        "left": {
          "$ref": "#/definitions/components.styles.borderSide"
        },
        "bottom": {
          "$ref": "#/definitions/components.styles.borderSide"
        },
        "right": {
          "$ref": "#/definitions/components.styles.borderSide"
        }
      },
      "additionalProperties": false
    },
    "components.styles.boxDecoration": {
      "title": "BoxDecoration",
      "description": "Element of type BoxDecoration",
      "type": "object",
      "properties": {
        "borderRadius": {
          "$ref": "#/definitions/components.styles.borderRadius"
        },
        "boxShadow": {
          "$ref": "#/definitions/components.styles.boxShadow"
        },
        "color": {
          "$ref": "#/definitions/components.styles.color"
        },
        "shape": {
          "$ref": "#/definitions/components.styles.boxShape"
        }
      },
      "additionalProperties": false
    },
    "components.styles.boxShape": {
      "title": "BoxShape",
      "description": "The BoxShape enum, used to define the shape of a box.",
      "type": "string",
      "enum": [
        "circle",
        "rectangle"
      ],
      "default": "rectangle"
    },
    "components.styles.checkboxStyle": {
      "title": "CheckboxStyle",
      "description": "Element of type CheckboxStyle",
      "type": "object",
      "properties": {
        "activeColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "checkColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "focusColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "hoverColor": {
          "$ref": "#/definitions/components.styles.color"
        },
        "splashRadius": {
          "description": "The splash radius.",
          "type": "number"
        },
        "visualDensity": {
          "$ref": "#/definitions/components.styles.visualDensity"
        },
        "shape": {
          "$ref": "#/definitions/components.styles.outlinedBorder"
        },
        "side": {
          "$ref": "#/definitions/components.styles.borderSide"
        }
      },
      "additionalProperties": false
    },
    "components.styles.outlinedBorder": {
      "title": "OutlinedBorder",
      "description": "Element of type OutlinedBorder",
      "type": "object",
      "properties": {
        "side": {
          "$ref": "#/definitions/components.styles.borderSide"
        }
      },
      "additionalProperties": false
    },
    "components.styles.carouselOptions": {
      "title": "CarouselOptions",
      "description": "Element of type CarouselOptions",
      "type": "object",
      "properties": {
        "height": {
          "type": "number"
        },
        "enlargeCenterPage": {
          "type": "boolean",
          "default": false
        },
        "autoPlay": {
          "type": "boolean",
          "default": false
        },
        "autoPlayInterval": {
          "$ref": "#/definitions/components.styles.duration"
        },
        "autoPlayAnimationDuration": {
          "$ref": "#/definitions/components.styles.duration"
        },
        "pauseAutoPlayOnTouch": {
          "type": "boolean",
          "default": true
        },
        "aspectRatio": {
          "type": "number"
        },
        "initialPage": {
          "type": "integer"
        },
        "enableInfiniteScroll": {
          "type": "boolean",
          "default": true
        },
        "reverse": {
          "type": "boolean",
          "default": false
        },
        "scrollDirection": {
          "$ref": "#/definitions/components.styles.direction"
        },
        "viewportFraction": {
          "type": "number",
          "default": 0.8
        },
        "enlargeStrategy": {
          "type": "string",
          "enum": [
            "scale",
            "height",
            "zoom"
          ],
          "default": "scale"
        }
      },
      "additionalProperties": false
    },
    "components.styles.duration": {
      "title": "Duration",
      "description": "Element of type Duration",
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "default": 0
        },
        "hours": {
          "type": "integer",
          "default": 0
        },
        "minutes": {
          "type": "integer",
          "default": 0
        },
        "seconds": {
          "type": "integer",
          "default": 0
        },
        "milliseconds": {
          "type": "integer",
          "default": 0
        },
        "microseconds": {
          "type": "integer",
          "default": 0
        }
      },
      "additionalProperties": false
    }
  }
}